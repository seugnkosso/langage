-télécharger scoop
--Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression

-installer unzip
--scoop install unzip

-installer laravel installer
--composer global require laravel/installer

-creer le projet
--laravel new example-app


-------PREMIER MODIFICATION DE L'APPLICATION INIT

-démarrage du server
--php artisan serve

-creation d'un page
--creer la vue
--creer le endpoint et la vue visé dans route


---------les routes
-représemtent les URL
-// creer un routeur get
-// Route avec paramettre
-{{-- affichage de la variable $user_id --}}


-----les controlleurs
-unité central - la logique - chef d'orcestre
--creer un controlleurs
-php artisan make:controller nomController
-php artisan make:controller ProductController
--relier controller et route
-// importer la fonction du controller dans le route
--utilisation des lien
--// ajout de parametre
--// nommage des route

------installation de tailwind css et flowbite

--instaler nodeJS
-scoop install nodeJS

--cmd installation
-npm install -D tailwindcss postcss autoprefixer flowbite

--creer le fichier de config tailwindcss
-npx tailwindcss init -p

--remplir tailwind.config.js

--remplir ./resources/css/app.css

--ajouter le css et js dans head
-@vite('resources/css/app.css')
-@vite('resources/css/app.js')

--lancer le server
-npm run dev



--------------------------les views
affichage des donnée - interaction with user - récupère les donnée de L'utilisateur

--regrouper les fichier par groupe

--utiliser la facade View dans controller

-- passer des variable partout dans provider



-------------blade template engine - interpolation
--affichage contenu
-{{$nom}}

--ecrire du scripte php
-{{ time()}}

--blade et javascripte
-@{{ nom }}

--json rendering - passage array  php a javascripte
-<script>
    var app = @php echo json_encode($nom) @endphp;
    console.log(app)
</script>
-<script>
    var app =  {{Illuminate\Support\Js::from($array)}}
    console.log(app)
</script>
-<script>
    var app =  {{Js::from($array)}}
    console.log(app)
</script>

--calcule
{{ 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1}}

--directive - condition
-@if  @else @elseif @endif

--function est défini ou vide
-isset()

--vide
-empty()

--si utilisateur est connecter
-@auth
 @endauth

--si utilisateur n'est pas connecter
-@guest
 @endguest

-- si on est en production
-@production
 @endproduction

--si en environnement
-@env
 @endenv

 --choix d'un cas
-@switch($test)
  @case('one')
    <p>kosso</p>
    @break
  @default
 @endswitch

--boucle
-@for @foreach @while @forelse
 @enfor @endforeach @endwhile @forelse

--arréter ou sauter une itération
-@continue @break

--balise php
-@php

--classe ou style dépendant des valeur php
-@classe({
    'p-4',
    'font-bold' => $isActive,
 })

-@style({
    color : red => $isActive
 })

--les attribut html
-@required @selected @checked , etc...

--les inclusion
-@include('nomdossier.nomfichier)

--















